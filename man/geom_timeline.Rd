% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timeline_geoms.R
\name{geom_timeline}
\alias{geom_timeline}
\title{Earthquake timeline plot}
\usage{
geom_timeline(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings specified by aes.}

\item{data}{The earthquake data to be plotted. See the example for details.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the
result of a call to a position adjustment function.}

\item{na.rm}{If FALSE (the default), removes missing values with a
warning. If TRUE silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the
legends? NA, the default, includes if any aesthetics are
mapped. FALSE never includes, and TRUE always includes.}

\item{inherit.aes}{If FALSE, overrides the default aesthetics,
rather than combining with them.}
}
\description{
The timeline geom plots a time line of earthquakes with a point for each
earthquake. The x aesthetic is a date and the y aesthetic is a factor
indicating some stratification in which case multiple time lines will be
plotted for each level of the factor (e.g. country). Optional aesthetics
include color, size, and alpha.
}
\note{
See \code{\link{geom_timeline_label}} for additional examples.
}
\examples{
\dontrun{
# You can plot a basic earthquake timeline as follows:

library(dplyr)

recent_earthquakes <- clean_earthquakes \%>\%
    filter(COUNTRY == "CHINA", DATE >= ymd('2000-01-01'))

g <- ggplot(recent_earthquakes,
            aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = TOTAL_DEATHS))
g <- g + geom_timeline(alpha = 0.5)
g <- g + theme_classic()
g <- g + theme(legend.position = "bottom",
               axis.line.y = element_blank(),
               axis.ticks.y = element_blank(),
               axis.title.y = element_blank(),
               axis.text.y = element_blank())
g <- g + guides(color = guide_colorbar(title = "# deaths"),
                size = guide_legend("Richter scale value"))
g
}
}
